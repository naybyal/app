// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model staffs {
  staffId    Int      @id @default(autoincrement())
  staffName  String
  staffRole  String
  createdAt  DateTime @default(now())
  staffEmail String
  staffPhone String
  salary     Int
  tokens     tokens[]
}

model tokens {
  tokenId      Int            @id @default(autoincrement())
  tokenDate    DateTime       @default(now())
  customerName String
  assignedTo   Int
  staff        staffs         @relation(fields: [assignedTo], references: [staffId])
  transaction  transactions[]
}

model services {
  serviceId     Int            @id @default(autoincrement())
  serviceName   String
  serviceCost   Int
  serviceProfit Int
  serviceLink   String
  transaction   transactions[]
}

model transactions {
  transactionId     Int       @id @default(autoincrement())
  transactionTime   DateTime  @default(now())
  transactionStatus String
  servedBy          Int
  serviceID         Int?
  tokenID           Int       @unique
  service           services? @relation(fields: [serviceID], references: [serviceId])
  token             tokens    @relation(fields: [tokenID], references: [tokenId])
}
